# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: build
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
  
      steps:
        - name: Check out repo
          uses: actions/checkout@v3
        - name: Log in to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASS }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: ${{ github.repository }}
        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            context: .
            file: DevOpsPalermo/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USER }}/devops-palermo:${{ github.sha }}
            labels: ${{ steps.meta.outputs.labels }}
  ci:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub
    steps:
     

      - name: Deploy
        # Only run this step if the branch is main
        if: github.ref == 'refs/heads/master'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}&imgURL=docker.io/eliaspeinado/devops-palermo:${{ github.sha }}
        run: |
          curl "$deploy_url"
          
  build_and_push_to_ecr:
    name: Build and Push Docker image to Amazon ECR
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
  
    steps:
        - name: Check out repo
          uses: actions/checkout@v3
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-2
  
        - name: Log in to Amazon ECR
          run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 039612851830.dkr.ecr.us-east-2.amazonaws.com
  
        - name: Build Docker image for Amazon ECR
          uses: docker/build-push-action@v4
          with:
            context: .
            file: DevOpsPalermo/Dockerfile
            push: true
            tags: 039612851830.dkr.ecr.us-east-2.amazonaws.com/devops_palermo:latest
  
  deploy_to_ecs:
    name: Deploy to ECS using CloudFormation
    runs-on: ubuntu-latest
    needs: build_and_push_to_ecr
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
  
      - name: Update CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file DevOpsPalermo/template.yaml \
            --stack-name DevOpsStack \
            --capabilities CAPABILITY_IAM
  
      - name: Output Load Balancer DNS
        run: |
          aws cloudformation describe-stacks \
            --stack-name DevOpsStack \
            --query 'Stacks[0].Outputs[?OutputKey==`LoadBalancerDNS`].OutputValue' \
            --output text
